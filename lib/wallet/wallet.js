"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.IWallet=exports.walletEx=void 0;var utils_1=require("jsuperzk/src/utils/utils"),crypto=require("crypto"),randomBytes=require("randombytes"),scryptsy=require("scrypt.js"),uuidv4=require("uuid/v4"),keccak256=require("keccak256"),bip39=require("bip39"),WalletEx=function(){function r(){}return r.prototype.setSignKey=function(r){this.signKey=r},r.prototype.getSignKey=function(){return this.signKey},r}(),walletEx=new WalletEx;exports.walletEx=walletEx;var IWallet=function(){function r(){}return r.prototype.generateMnemonic=function(){return bip39.generateMnemonic()},r.prototype.genKeystore=function(r,e,t){if(!this.keyExists(r))throw new Error("This is a public key only wallet");var i={cipher:"aes-128-ctr",kdf:"scrypt",salt:randomBytes(32),iv:randomBytes(16),uuid:randomBytes(16),dklen:32,c:262144,n:262144,r:8,p:1},o=this.kdfParamsForScrypt(i),n=scryptsy(Buffer.from(e),utils_1.toBuffer(o.salt),o.n,o.r,o.p,o.dklen),e=crypto.createCipheriv(i.cipher,n.slice(0,16),i.iv);if(!e)throw new Error("Unsupported cipher");r=this.runCipherBuffer(e,r),n=keccak256(Buffer.concat([n.slice(16,32),Buffer.from(r)]));return o.salt=o.salt,{version:t,id:uuidv4({random:i.uuid}),address:"",crypto:{ciphertext:r.toString("hex"),cipherparams:{iv:i.iv.toString("hex")},cipher:i.cipher,kdf:i.kdf,kdfparams:o,mac:n.toString("hex")}}},r.prototype.kdfParamsForScrypt=function(r){return{dklen:r.dklen,salt:r.salt.toString("hex"),n:r.n,r:r.r,p:r.p}},r.prototype.keyExists=function(r){return null!=r},r.prototype.decryptKeystore=function(r,e){var t="object"==typeof r?r:JSON.parse(r);if("scrypt"!==t.crypto.kdf)throw new Error("Unsupported key derivation scheme");r=t.crypto.kdfparams,e=scryptsy(Buffer.from(e),utils_1.toBuffer(r.salt),r.n,r.r,r.p,r.dklen);r=Buffer.from(t.crypto.ciphertext,"hex");if(keccak256(Buffer.concat([e.slice(16,32),r])).toString("hex")!==t.crypto.mac)throw new Error("Key derivation failed - possibly wrong passphrase");t=crypto.createDecipheriv(t.crypto.cipher,e.slice(0,16),Buffer.from(t.crypto.cipherparams.iv,"hex"));return this.runCipherBuffer(t,r)},r.prototype.runCipherBuffer=function(r,e){return Buffer.concat([r.update(e),r.final()])},r}();exports.IWallet=IWallet;